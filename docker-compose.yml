version: '3.7'
services:

  redis-stack:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    networks:
      - redis-network

  redis-insight:
    image: redislabs/redisinsight:latest
    networks:
      - redis-network
    depends_on:
      - redis-stack

  envoy:
    build:
      context: ./envoy
      dockerfile: Dockerfile
    ports:
      - "10000:10000"
    depends_on:
      - redis-insight
    networks:
      - redis-network

  ol:
    container_name: ol
    image: osixia/openldap:latest
    ports: 
      - "389:389"
      - "636:636"
    env_file:
      - ./ldap.env
    volumes:
      - ./data/ldif:/data/ldif
    command: --loglevel debug
    networks:
      - redis-network

  #ad:
  #  container_name: ad
  #  image: dwimberger/ldap-ad-it
  #  ports:
  #    - "10389:10389"
  #  volumes:
  #    - "./data/ldif/ad.ldif:/ldap/users.ldif" 
  
  nginx-ldap-auth:
    image: bitnami/nginx-ldap-auth-daemon
    ports:
      - 8888:8888
    depends_on:
      - ol
    networks:
      - redis-network
  
  nginx-ldap:
    build:
      context: ./nginx-ldap
      dockerfile: Dockerfile
    ports:
      - "12000:12000"
    depends_on:
      - redis-insight
      - ol
    networks:
      - redis-network

  # redis-insight-setup:
  #   image: curlimages/curl
  #   command: >
  #          -s -vvv -X "POST" "http://redis-insight:8001/api/instance/"  
  #          -H "Content-Type: application/json; charset=utf-8" 
  #          -d '{"host": "redis-stack","name": "redis","connectionType": "STANDALONE","port": 6379}'     
  #   networks:
  #     - redis-network
  #   depends_on:
  #     - redis-insight
  #     - redis-stack
  #   restart: "on-failure"
      

networks:
  redis-network:
    driver: bridge
