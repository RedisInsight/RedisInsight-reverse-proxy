version: "3.7"
services:
  ol:
    image: osixia/openldap:latest
    ports:
      - "389:389"
      - "636:636"
    env_file:
      - ./ldap.env
    volumes:
      - ./data/ldif:/data/ldif
    command: --loglevel debug
    networks:
      - redis-network

  ol-verify:
    image: python:slim-buster
    volumes:
      - ./verify_user.py:/verify_user.py
    profiles:
      - verify
    stdin_open: true
    tty: true
    command:
      - bash
      - -c
      - |
        apt -qq update && apt -qq install -y gcc libsasl2-dev libldap2-dev libssl-dev
        pip --disable-pip-version-check install prompt_toolkit python-ldap --quiet
        python3 /verify_user.py
    depends_on:
      - ol
    networks:
      - redis-network

  ol-seed:
    image: alpine
    volumes:
      - ./data/ldif:/data/ldif
    networks:
      - redis-network
    depends_on:
      - ol
    command:
      - sh
      - -c
      - |
        apk add openldap-clients
        echo "Seeding ol db...."
        sleep 3
        ldapadd -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/overlay.ldif -w ldap123 -c
        ldapadd -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/referential.ldif -w ldap123 -c
        ldapmodify -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/setupdb.ldif -w ldap123 -c
        ldapmodify -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/groups.ldif -w ldap123 -c
        ldapmodify -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/users.ldif -w ldap123 -c
        ldapmodify -a -x -H "ldap://ol:389" -D "cn=admin,dc=ldap-demo,dc=test" -f /data/ldif/index.ldif -w ldap123 -c


  nginx-ldap-auth:
    image: bitnami/nginx-ldap-auth-daemon
    ports:
      - 8888:8888
    depends_on:
      - ol
    networks:
      - redis-network

  nginx-ldap:
    image: nginx
    volumes:
      - ./nginx-ldap.conf.template:/etc/nginx/templates/nginx-ldap.conf.template
    ports:
      - "${NGINX_PORT:-12000}:${NGINX_PORT:-12000}"
    environment:
      - FORWARD_HOST=redisinsight
      - FORWARD_PORT=${RIPORT:-8001}
      - NGINX_PORT=${NGINX_PORT:-12000}
    depends_on:
      - redisinsight
      - ol
    networks:
      - redis-network

  redis-stack:
    image: redis/redis-stack-server
    networks:
      - redis-network


  #ad:
  #  container_name: ad
  #  image: dwimberger/ldap-ad-it
  #  ports:
  #    - "10389:10389"
  #  volumes:
  #    - "./data/ldif/ad.ldif:/ldap/users.ldif"

  redisinsight:
    image: redislabs/redisinsight
    environment:
      - RIPORT=${RIPORT:-8001}
    depends_on:
      - redis-stack
    networks:
      - redis-network


  redisinsight-redis-setup:
    image: alpine
    environment:
      - RIPORT=${RIPORT:-8001}
    command:
      - sh
      - -c
      - |
        apk add curl
        echo "Adding redis-stack...."
        wget -qO- https://raw.githubusercontent.com/eficode/wait-for/v2.2.3/wait-for | sh -s -- redisinsight:$$RIPORT -- echo Redisinsight is up
        curl -s -X "POST" "http://redisinsight:$$RIPORT/api/instance/"   -H "Content-Type: application/json; charset=utf-8" -d '{"host": "redis-stack","name": "redis-stack","connectionType": "STANDALONE","port": 6379}'
    networks:
      - redis-network
    depends_on:
      - redisinsight
      - redis-stack

networks:
  redis-network:
    driver: bridge
